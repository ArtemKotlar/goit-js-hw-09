{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EACET,EAAAY,OAAOC,QAAQ,uBAAuBV,QAAeC,MAAW,CAC9DU,QAAS,IACTC,MAAO,WAIXL,EACEV,EAAAY,OAAOI,QAAQ,sBAAsBb,QAAeC,MAAW,CAC7DU,QAAS,IACTC,MAAO,UACT,GAGHX,EAAA,GAEP,EAzBa,CACXa,KAAMC,SAASC,cAAc,WAyC1BF,KAAKG,iBAAiB,UAf3B,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAASF,EAAIG,cAAcC,SACjC,IAAIrB,GAASmB,EAAOnB,MAAMsB,MACtBC,GAAQJ,EAAOI,KAAKD,MACpBE,GAAUL,EAAOK,OAAOF,MAE5B,IAAK,IAAIvB,EAAW,EAAGA,GAAYyB,EAAQzB,IACzCD,EAAcC,EAAUC,GACrByB,MAAKH,GAASA,IACdI,OAAMC,GAASA,IAClB3B,GAASuB,CAEb,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n            timeout: 4000,\n            width: '300px',\n          })\n        );\n      } else {\n        reject(\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n            timeout: 4000,\n            width: '300px',\n          })\n        );\n      }\n    }, delay);\n  });\n}\n\nfunction handelSubmit(evt) {\n  evt.preventDefault();\n  const formEl = evt.currentTarget.elements;\n  let delay = +formEl.delay.value;\n  let step = +formEl.step.value;\n  let amount = +formEl.amount.value;\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(value => value)\n      .catch(error => error);\n    delay += step;\n  }\n}\n\nrefs.form.addEventListener('submit', handelSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","timeout","width","failure","form","document","querySelector","addEventListener","evt","preventDefault","formEl","currentTarget","elements","value","step","amount","then","catch","error"],"version":3,"file":"03-promises.911d946f.js.map"}